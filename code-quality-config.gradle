/** ########### PMD CONFIGURATION  **/

pmdTest {
	excludes = ['*']
}


/** ########### CHECKSTYLE CONFIGURATION  **/

checkstyle {
    configFile = "${rootProject.projectDir}/config/code-quality/checkstyle.xml" as File
    configProperties = [configDir: "${rootProject.projectDir}/config"]
	checkstyleMain.exclude  ''
}


/** ########### FINDBUGS CONFIGURATION  **/
/**
findbugs {
    sourceSets = [sourceSets.main]
    excludeFilter = "${rootProject.projectDir}/config/findbugs/excludes.xml" as File
}
**/

/** ########### JACOCO CONFIGURATION  **/

ext['basePackage'] = 'co/com/usb/platform'

jacocoTestReport {
    reports {
        xml {
            enabled true
        }

        html {
            enabled true
        }
    }
    afterEvaluate  {
    	classDirectories = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [ "${basePackage}/crosscutting/messages/**",
                    		   "${basePackage}/infrastructure/main/**",
							   "${basePackage}/crosscutting/domain/**",
							   "${basePackage}/crosscutting/persistence/entity/**",
							   "${basePackage}/crosscutting/persistence/repository/**",
							   "${basePackage}/infrastructure/configuration/**",
							   "${basePackage}/modules/configurations/gateway/model/pki/**"])
        })
    }
}



/** ########### SONARQUBE CONFIGURATION  **/

ext['sonarBasePackage'] = 'src/main/java/co/com/usb/ecd'

ext['sonarExcludesPackages'] = [
				   "${sonarBasePackage}/crosscutting/messages/**",
                   "${sonarBasePackage}/crosscutting/domain/**",
				   "${sonarBasePackage}/infrastructure/main/**",
				   "${sonarBasePackage}/crosscutting/persistence/entity/**",
				   "${sonarBasePackage}/crosscutting/persistence/repository/**",
				   "${sonarBasePackage}/infrastructure/configuration/**",
                   "${sonarBasePackage}/modules/configurations/gateway/model/pki/**",
]

sonarqube {
    properties {
        property "sonar.projectName", "ra-core-service"
        property "sonar.projectKey", "ra-core-service"
        property "sonar.language", "java"
        property "sonar.jacoco.reportPath", "${buildDir}/jacoco/test.exec"
		property "sonar.host.url", "https://sonar.blanclabs.com"
		property "sonar.coverage.exclusions", sonarExcludesPackages
		property "sonar.exclusions", sonarExcludesPackages										   
    }
    
}